data:
  root: data/
  recordings: neuropixel.bin
  geometry: neuropixel_channels.npy


recordings:
  # precision of the recording (e.g.'int16')
  dtype: int16
  # recording rate (in Hz)
  srate: 30000
  # number of channels in the recording
  n_channels: 10
  # spatial radius of spikes
  spatial_radius: 70

steps:
  filter: True
  triage: True
  coreset: True
  whitening: True
  deconvolution: True

# 'nn' for neural net detction, 'threshold' for amplitdue threshold detection
detection: threshold
# 'MFM' for mixture of finite mixture clustering, 'dpmm' for dirichlete process mixture model
clustering: MFM

filter:
  # Order of Butterworth filter
  order: 3
  # Low pass frequency (Hz)
  loq_frequency: 300
  # High pass factor (proportion of sampling rate)
  high_factor: 0.1

triage:
  # Num. of nearest neighbors to consider
  k: 20
  # percentage of data to be triaged
  percent: 0.01


# PREPROCESS
portion: 1
# max. memory allowed for loading recording (in bytes)
max_memory: 1000000000
# [0,1] to use parital data to estimate templates
partial_data: 1
# determine whitening matrix in each minibatch
whiten_batchwise: 0
# number of features for dimension reduction
n_features_dimensionality_reduction: 3
# temporal length of wavforms in ms
spike_size_ms: 1

neural_network_detection:
  # Threshold for spike event detection
  nnThreshdold: 0.5
  # Threshold for clear/collision detection
  nnThreshdoldCol: 0.75


coreset:
  # Num. of clusters
  n_clusters: 10
  # distance threshold
  distance_threshold: 0.95

clustering:
  # Masking threshold
  masking_threshold: [0.9, 0.5]
  # Num. of new clusters in split
  kSplit: 5

# TEMPLATE MERGING
# threshold for template merge
tMergeTh: [0.8, 0.7]

deconvoluyion:
  gpu: True
  rank: 3
  threshold: 4
  deconvLam: 20

# Neural network parameters
neural_network:
  # NN filenames
  # tf nn trained model file name
  #nnFilename: 2class_multi2.ckpt
  nnFilename: detectnet1.ckpt
  aeFilename: ae_31.ckpt
  nnTriageFilename: triagenet1.ckpt

  # NN architecture
  # num. of filters in each layer
  nnNFilters: [16, 8, 1]
  # temporal filter size
  nnFilterSize: [31, 1, 1]  
  
  nnTriageFilterSize: [8, 16]  
  

cluster_prior:
  beta: 1
  a: 1
  lambda0: 0.01
  mu: [[0], [0], [0]]
  nu: 5
  V: 2
