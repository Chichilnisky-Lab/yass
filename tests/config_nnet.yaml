# NOTE: this are not the right
# parameters for the neuropixel data
# but we are using them to avoid breaking
# the nnet detection, will update
# when we incorporate new models

data:
  root_folder: tests/data
  recordings: neuropixel.bin
  geometry: geometry_fake.txt

recordings:
  dtype: int16
  sampling_rate: 20000
  n_channels: 10
  spatial_radius: 70
  spike_size_ms: 1.5

# TURN ON/OFF MODULES
# 0 for filtered recording
doFilter: True
doTriage: True
doCoreset: True
doWhitening: True

methods:
  detection: nn
  clustering: MFM


# PREPROCESS
portion: 1
# max. memory allowed for loading recording (in bytes)
maxMem: 1000000000
# [0,1] to use parital data to estimate templates
partialDat: 1
# determine whitening matrix in each minibatch
whitenBatchwise: 0
# number of features for dimension reduction
nFeat: 3

# TRIAGE
# Num. of nearest neighbors to consider
triageK: 20
# percentage of data to be triaged
triagePercent: 0.01

# CORESET
# Num. of clusters
coresetK: 10
# distance threshold
coresetTh: 0.95

# CLUSTERING
# Masking threshold
maskTh: [0.9, 0.5]
# Num. of new clusters in split
kSplit: 5

# TEMPLATE MERGING
# threshold for template merge
tMergeTh: [0.8, 0.7]

deconvolution:
  rank: 3
  threshold: 4
  lam: 20


# Neural network parameters
neural_network:
  aeFilename: ae_31.ckpt
  nnTriageFilename: triagenet1.ckpt

  # NN architecture
  # num. of filters in each layer
  nnNFilters: [16, 8, 1]
  # temporal filter size
  nnFilterSize: [31, 1, 1]  
  
  nnTriageFilterSize: [8, 16]  
  
  # NN training
  # train nn and save
  nnTrain: 0
  # 'recording' : raw recording,
  inputType: 'recording'
  # 'sorted_recording' : raw recording with spike train, 'templates' : templates
  # 'rectangular', 'non_rectangular'
  ChannelGeometry: 'rectangular'
  # num. of iter. in training
  nnIteration: 100000
  # size of minibatch in training
  nnBatch: 256
  # training step size
  nnTrainStepSize: 0.001
  # L2 reg. scale
  nnL2RegScale: 0.00000005
